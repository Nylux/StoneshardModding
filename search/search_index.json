{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Unofficial Stoneshard Modding Documentation","text":"<p>Welcome to the Unofficial Stoneshard Modding Documentation !  </p> <p>This documentation is written and updated by the community in the interest of pooling knowledge to create better mods, faster. Keep in mind this is a very early version of the documentation, it very likely will contain errors and/or inaccuracies, and will change considerably in the future.</p> <p>Feel free to report any outdated or incorrect information on the Stoneshard Mod Hub Discord. Looking to contribute ? Contact one of the maintainers about it on Discord.</p>"},{"location":"#summary","title":"Summary","text":"<ul> <li>Index : This page.</li> <li>Tools : The tools we use, or have used, to make and distribute mods.</li> <li>Guides : Detailed guides on how to mod something specific.</li> <li>References : Information and documentation of code used when modding.</li> </ul>"},{"location":"#contributors","title":"Contributors","text":"Name Maintainer Socials Nylux <code>.nylux</code> remyCases <code>zizani#4544</code> <code>remyCases</code> ... ... ..."},{"location":"#links","title":"Links","text":"<ul> <li>Discord </li> <li>Github </li> </ul>"},{"location":"guides/adding-new-dialogue/","title":"Adding Basic Dialogue","text":"<p> 0.8.1.11</p>"},{"location":"guides/adding-new-dialogue/#description","title":"Description","text":"<p>This guide's objective is to add a simple dialogue with the DE2 system. We will add dialogue to a newly created NPC to demonstrate the basic usage of the Dialogue Editor 2 Tool.</p>"},{"location":"guides/adding-new-dialogue/#creating-the-npc","title":"Creating the NPC","text":"<p>To add dialogue, we're going to need an NPC capable of speech. Let's implement one.</p> 1. Creating the gameobject <ul> <li>Create a new gameobject and name it <code>o_npc_tutorial</code>.</li> <li>Add <code>o_npc_baker</code> as its parent.</li> <li>Add any of the <code>s_npc_...</code> sprite to it. (I'll add the <code>s_npc_merc02</code> for this tutorial.)</li> </ul> <p></p> 2. Adding the Create Event <p>If we don't change anything, our new NPC will be a baker and have the baker's dialogues. Not quite what we want, so let's change that by adding a Create Event to override the baker's : o_npc_tutorial - Create Event<pre><code>event_inherited()  \nname = \"Something Original\" #(1)!\nid_name = \"tutorial\"  #(2)!\noccupation = \"tutorial\" #(3)!\nsubtype = \"townee\"  \nds_list_clear(myfloor_list)  \nds_list_add(myfloor_list, \"S1\", \"S1\", \"S1\", \"S1\")  \ndelta_array = [\"S1\", \"S1\", \"S1\", \"S1\"]  \nmyfloor = \"S1\"  \nmyfloor_counter = \"S1\"  \nscr_set_hl()\ntime_period_night = do_animation  \nai_script = gml_Script_scr_enemy_choose_state\nidle_state = 0\nrumors = 0 #(4)!\nchat = 1 #(5)!\ndialog_id = de2_dialog_open(\"tutorial.de2\") #(6)!\ntopic = \"topic0\" #(7)!\ngold_k = irandom_range(100, 300) #(8)!\n</code></pre></p> <ol> <li>Obviously, this is the name for your NPC.There are other ways to set it but this will do.</li> <li>The unique identifier for this NPC.I usually keep it the same as the occupation.Not exactly sure where it's used yet.</li> <li>The job of your NPC.All NPC's have a job.This can be baker, drunkard or anything you can imagine.It's used to filter out dialogues of the same name.For instance, there may be several <code>greeting</code> dialogues in the game, but only 1 for the occupation you specified, and so this is the one that will be used.</li> <li>Whether this NPC is able to share rumors with the player or not.</li> <li>Whether this NPC can chat with the player or not.</li> <li>The .de2 dialogue file to open to find the dialogue's structure.</li> <li>The topic to start the provided dialogue at.This will make more sense in a moment.</li> <li>The amount of gold the NPC should have on him.Here, a random amount between 100 and 300.</li> </ol> 3. Adding the Alarm 1 Event <p>The Alarm 1 Event is where we're going to load our dialogues into the game. Obviously, we haven't created them yet, but bare with me, we're getting there.</p> o_npc_tutorial - Alarm 1 Event<pre><code>event_inherited()  \nscr_npc_list_add_dialog(questions_map, \"tutorial_greeting\", \"map\")  \nscr_npc_list_add_dialog(questions_map, \"tutorial_time\", \"map\")  \nscr_npc_list_add_dialog(questions_map, \"tutorial_givetime\", \"map\")  \n</code></pre>"},{"location":"guides/adding-new-dialogue/#creating-the-dialogue-structure","title":"Creating the Dialogue Structure","text":"<p>Now that we have an NPC set up, let's prepare our dialogue.</p> 1. Create a new topic <ul> <li>Open DE2.exe.  </li> <li>Right click anywhere on the canvas to create a new topic.</li> <li>You can rename it if you want to, but you will need to reflect that change in <code>o_npc_tutorial</code> Create Event.</li> </ul> 2. Adding lines <p>Now you could just write dialogue by simply writing anything in the <code>Text</code> field, and that would work. But that's simply not the best way to do things.</p> But why ? <p>Because if you want to reuse the same line somewhere else in your dialogue, or even in another dialogue, you will have to rewrite it entirely. Instead, we usually put the dialogue line's ID in the <code>Text</code> field, and let Stoneshard find the appropriate text.</p> <p>For now let's write down <code>tutorial_greeting</code> in the <code>Text</code> field. We can leave the script field empty as we don't want to run any specific function for this.</p> 3. Adding answers <p>Having an NPC say a line is fine and dandy, but wouldn't it be nice to have answers to leave, trade or say anything you may come up with ? This can be achieved fairly easily : </p> <ul> <li>Click the <code>Add new</code> button with a topic selected. </li> <li>Specify the dialogue line ID for your answer (or type your answer here directly)</li> <li>For our tutorial we will use <code>tutorial_time</code>.</li> </ul> <p>Much like you can add your own dialogue lines, Stoneshard has some useful lines you can freely use. Here's a list of some of them :</p> Useful Dialogue Lines List <ul> <li>trade</li> <li>back</li> <li>leave</li> <li>return</li> <li>rent_room</li> <li>work</li> <li>chat</li> <li>this_place</li> <li>agree</li> <li>advance</li> <li>think</li> <li>continue</li> <li>dungeon_complete</li> <li>bounty_complete</li> </ul> <p>Additionally, some specific answers may require scripts to provide the expected result, like trading or closing the dialogue. That's why we have the script field !</p> <p>Here's a non exhaustive list of useful functions to call there :</p> Useful Scripts List <ul> <li>scr_close_dialog</li> <li>scr_trade_open</li> <li>your own functions !</li> </ul> Screenshot - Dialog Editor <p>If you've followed the guide to this point this is what you should be looking at in your Dialog Editor :</p> <p></p> 4. Adding a way to close the dialog <p>Once again hit the <code>Add new</code> button and write the following :</p> <p></p> <p>When this answer will be clicked, the script <code>scr_close_dialog</code> will be called. You can probably guess what it does.</p> 5. Adding another Topic <p>Right click anywhere on the canvas to add a new topic. Once again you can rename it to anything, but this time no need to change anything in the <code>o_npc_tutorial</code> Create Event as this won't be our starting topic.</p> <ul> <li>In the <code>Text</code> field, write <code>tutorial_givetime</code>.</li> <li>Drag the node from the <code>tutorial_time</code> answer to our new topic.</li> <li>Add a new answer by clicking the <code>Add new</code> button.</li> <li>In the answer's <code>Text</code> field, write <code>back</code>.</li> <li>Drag the node from the <code>back</code> answer to the first topic we created before.</li> </ul> Screenshot - New Topic <p></p> 6. Saving <p>Now that we're happy with our dialogue, we can save our .de2 file. Click the floppy disk on the top right or use the usual Ctrl+Alt+S shortcut to save.</p> <p>Make sure to save your .de2 file in the <code>dialogs</code> folder inside your game installation directory. There should already be plenty of other .de2 files there.</p> <p>Also make sure to name your .de2 file the exact same way you wrote it in the <code>o_npc_tutorial</code> Create Event, otherwise the game won't find it.</p>"},{"location":"guides/adding-new-dialogue/#adding-the-dialogue-lines","title":"Adding the Dialogue Lines","text":"<p>Okay. We're done with the set up. We have a working NPC and we also created our dialogue structure. Now onto the dialogue lines themselves.</p> 1. Listing dialogue line ID's <p>When we were creating our dialogue structure, we wrote placeholder dialogue id's. Let's list them here for reference :</p> <ul> <li>tutorial_greeting</li> <li>tutorial_time</li> <li>tutorial_givetime</li> <li>leave</li> <li>back</li> </ul> <p>As mentionned previously, <code>leave</code> and <code>back</code> are built in Stoneshard, so we already know those will be replaced with the proper text when the game is run. But the rest of our dialogues are custom and don't already exists. Let's create those.</p> 2. Registering dialogues in table_NPC_Lines <p>Working with tables in UMT can be difficult at times. The <code>table_NPC_Lines</code> table is definitely one of if not the worst offenders in that regard. It's over 3 millions characters long and it WILL lag the fuck out of your UMT.</p> <p>When working with those, you can extract them with the GML to CSV Converter or you can do it by hand. I recommend extracting it so you can figure out what each field does. But I feel lazy so let's simply do it by hand this time :</p> <pre><code>, \"tutorial_greeting;any;tutorial;any;any;any;This is a tutorial.;This is a tutorial.;This is a tutorial.;This is a tutorial.;This is a tutorial.;This is a tutorial.;This is a tutorial.;This is a tutorial.;This is a tutorial.;This is a tutorial.;This is a tutorial.;This is a tutorial.;This is a tutorial.;This is a tutorial.;\", \"tutorial_time;any;tutorial;any;any;any;Ask for the time.;Ask for the time.;Ask for the time.;Ask for the time.;Ask for the time.;Ask for the time.;Ask for the time.;Ask for the time.;Ask for the time.;Ask for the time.;Ask for the time.;Ask for the time.;Ask for the time.;Ask for the time.;\", \"tutorial_givetime;any;tutorial;any;any;any;Huh ? The time ? I have no idea.;Huh ? The time ? I have no idea.;Huh ? The time ? I have no idea.;Huh ? The time ? I have no idea.;Huh ? The time ? I have no idea.;Huh ? The time ? I have no idea.;Huh ? The time ? I have no idea.;Huh ? The time ? I have no idea.;Huh ? The time ? I have no idea.;Huh ? The time ? I have no idea.;Huh ? The time ? I have no idea.;Huh ? The time ? I have no idea.;Huh ? The time ? I have no idea.;Huh ? The time ? I have no idea.;\"\n</code></pre> <p>Simply copy this block here :</p> <p></p>"},{"location":"guides/adding-new-dialogue/#testing","title":"Testing","text":"<p>Now it's time to test our dialogue. Add our NPC to any room or spawn it by pressing F1 with the following script :</p> o_player - gml_Object_o_player_KeyPress_112<pre><code>instance_create_depth(x, y, depth, o_npc_tutorial);\n</code></pre>"},{"location":"guides/adding-new-sprites/","title":"Adding New Sprites","text":"<p>Warning</p> <p>This article is planned to be rewritten soon. Stay tuned.</p> <p>In Stoneshard, sprites aren't simply imported as png files, but as spritesheets in an \"Embedded Texture\" which is then cut into multiple \"Page Items\", and turned into actual \"Sprites\".</p>"},{"location":"guides/adding-new-sprites/#embedded-textures","title":"Embedded Textures :","text":"<p>That's the entry point for textures. Each mod should create a new one (or several) with their whole spritesheet. They need to be in power of 2's dimensions, so for instance :</p> <p><code>16, 32, 64, 128, 256, 512...</code></p> <p>A valid resolution for an embedded texture could be <code>512x128</code>.</p>"},{"location":"guides/adding-new-sprites/#page-items","title":"Page Items :","text":"<p>Page Items crop Embedded Textures and isolate the desired sprites. In the end, you can have as many Page Items as you had sprites on your Embedded Texture.</p>"},{"location":"guides/adding-new-sprites/#sprites","title":"Sprites :","text":"<p>The actual Sprite itself is created, and takes one or multiple Page Item as a texture. It can then be named and used by gameobjects.</p>"},{"location":"guides/adding-new-sprites/#manually-importing-sprites","title":"Manually Importing Sprites:","text":"<ul> <li><code>1</code> This line is the one corresponding to #15, aka your base texture file. It's essentially an invisible box controlled by #2, #3, #4 and #5. If it's on your texture, it will show with colors and not transparent.</li> <li><code>2</code> This is the offset on the X axis for your invisible box. (from the left side)</li> <li><code>3</code> This is the offset on the Y axis for your invisible box. (from the top)</li> <li><code>4</code> This is the length on the X axis for your invisible box.</li> <li><code>5</code> This is the height on the Y axis for your invisible box.</li> <li><code>6</code> This line is the one which corresponds to #14, aka the Page Item you're trying to create. it's a visible green box on a transparent background where your sprite should appear.</li> <li><code>7</code> This is the offset on the X axis for your green box. IT IS BASED ON #11's SIZE.</li> <li><code>8</code> This is the offset on the Y axus for your green box. IT IS BASED ON #11's SIZE.</li> <li><code>9</code> This is the length on the X axis for your green box.</li> <li><code>10</code> This is the height on the Y axis for your green box.</li> <li><code>11</code> This line defines the bounding box, aka the size of the transparent background on which your green box sits.</li> <li><code>12</code> This is the length on the X axis for the bounding box.</li> <li><code>13</code> This is the height on the Y axis for the bounding box.</li> <li><code>14</code> This is your Page Item. Your cropped texture should appear here inside a green box.</li> <li><code>15</code> This is your Embedded Texture, which can contain many different sprites. It should be displayed with colors and not transparent.</li> </ul>"},{"location":"guides/adding-new-sprites/#notes","title":"Notes :","text":"<ul> <li>UMT is VERY buggy and the Page Item sometimes doesn't update even if you're perfectly on your sprite, just in case it wasn't hard enough to understand what the fuck is going on.</li> <li>If you're creating an item that is supposed to fit in your inventory, a single cell is <code>27x27</code>, anything bigger than that will overflow into other cells.</li> <li>It's good to check other inventory items of the same size as the one you want to create to check for their sprite's dimensions.</li> </ul>"},{"location":"guides/adding-new-sprites/#automatically-importing-sprites","title":"Automatically Importing Sprites","text":"<p>To automatically import sprites, you need to use UMT's Scripts : <code>UMT &gt; Scripts &gt; Resource Repackers &gt; Import Graphics.csx</code></p> <p>The sprites need to be in a folder named 'Sprites', with their name respecting the following format : <code>s_objectname_0.png</code> The number at the end can be used when multiple sprites have the same name, like in animations.</p>"},{"location":"guides/bigger-backpacks/","title":"Bigger Backpacks","text":"<p> 0.8.1.9</p> <p>Info</p> <p>This guide was initially written by DrStalker on Reddit  and rewritten to fit this documentation's format.  </p> <p>This guide assumes you're familiar with the basics of modding Stoneshard. If that's not the case, try reading the Getting Started guide first.</p>"},{"location":"guides/bigger-backpacks/#description","title":"Description","text":"<p>In this article we're going to take the very limited backpacks of the game and make them a bit more convenient to use, first by changing their size in the inventory and then by changing their capacity.</p> <p>This guide is a bit more advanced than the example in Getting Started, so make sure to read thoroughly.</p>"},{"location":"guides/bigger-backpacks/#identifying-the-assets","title":"Identifying the assets","text":"<p>Since we're working with a gameobject, we need to identify the assets related to backpacks and figure out what they do.  </p> 1. Identifying the backpack gameobjects Screenshot - Search for <code>backpack</code> <p></p> <p>As seen in the screenshot above, when searching for <code>backpack</code> in UMT, we get a few gameobjects :</p> <ul> <li>o_loot_backpack, this is the the backpack when on the ground. </li> <li>o_inv_backpack, this is the backpack when in your inventory.</li> <li>o_container_backpack, this is the GUI that shows up when you open the backpack.</li> </ul> 2. Identifying the backpack sprites <p>When we searched <code>backpack</code> in UMT, we also seem to have found a few sprites. But how do we know which ones are of interest to us ?</p> <p>Double click on the gameobjects we've identified above and simply check their <code>Sprite</code> field !</p> Screenshot - Finding the Sprites <p></p> <p>Now we know which sprite is used by the gameobjects we found :</p> <ul> <li>o_loot_backpack -&gt; <code>s_loot_travellersbackpack</code></li> <li>o_inv_backpack -&gt; <code>s_inv_travellersbackpack</code></li> <li>o_container_backpack -&gt; <code>s_container_backpack</code></li> </ul>"},{"location":"guides/bigger-backpacks/#changing-the-size-in-the-inventory","title":"Changing the size in the inventory","text":"<p>Now that we know what gameobjects and sprites to look at, we can get to work. Since we're trying to modify the backpack in the inventory, we know that there is a good chance we will have to modify <code>o_inv_backpack</code>, <code>s_inv_travellersbackpack</code> or both.</p> Quick Theory - Inventory Cell Size <p>As we are going to deal with an inventory sprite (<code>s_inv_*...</code>), there's a very important thing to know.</p> <p>Each cell in your inventory is exactly 27x27 pixels.  </p> <p>But why is that important ?</p> <p>Because Stoneshard doesn't set a value for how many cells an item is going to take in your inventory anywhere. The game decides this solely based on the size of your sprite.</p> <p>Here are some good examples :</p> <ul> <li> A sprite which is <code>27x27</code> pixels will be <code>1 cell wide</code> and <code>1 cell tall</code>. (Example : <code>s_inv_coal</code>)</li> <li> A sprite which is <code>54x27</code> pixels will be <code>2 cells wide</code> and <code>1 cell tall</code>. (Example : <code>s_inv_clay_plate</code>)</li> <li> A sprite which is <code>27x81</code> pixels will be <code>1 cell wide</code> and <code>3 cells tall</code>. (Example : <code>s_inv_footmanaxe</code>)</li> </ul> <p>Here is a bad example :</p> <ul> <li> A sprite which is <code>33x27</code> pixels will not fit in a single cell and overflow on its neighbour horizontally, but fit perfectly vertically.</li> </ul> <p>Info</p> <p>In short, just make sure your inventory sprite is always a multiple of 27. If it's not, don't panic, you can always add padding to it to make it a multiple of 27.</p> Changing the Size - Part 1 <p>Let's take a quick look at <code>s_inv_travellersbackpack</code>.</p> <p>Its dimensions seem to be <code>81x108</code> pixels. As we know a single cell is <code>27</code> pixels, we can deduce the resulting item will take <code>3x4</code> cells in the inventory.  </p> <p>Notice something weird about the sprite itself ?</p> <p>If you answered something like :</p> <p>Wait isn't there a lot of padding ?</p> <p>You'd be correct. <sub>If you didn't, it's fine, I swear, I'm not crying you are.</sub></p> <p>As a matter of fact, if you export the sprite by pressing the <code>Export all frames (or Spine data if this is a Spine sprite)</code> button, you'll notice the sprite itself is actually...</p> <p><code>47x75</code> pixels !</p> <p>But wait those are not multiples of 27 !</p> <p>That's absolutely correct, but it's close ! If we were to try to use multiples of 27 to make it fit in the inventory cells, the closest we could get would be <code>54x81</code> pixels, which would mean <code>2x3</code> cells in the inventory, so let's try to go for that.</p> <p>The reason why the sprite itself not using multiples of 27 is fine is because it's using padding to reach them ! In the next section we'll see how to get rid of some of that padding to get our desired <code>54x81</code> pixels sprite.</p> Changing the Size - Part 2 <p>First let's change the size of <code>s_inv_travellersbackpack</code> to <code>54x81</code>. We'll also reduce the margins to <code>1</code>, <code>53</code>, <code>80</code> and <code>1</code>.</p> Screenshot - Editing Size and Margins in <code>s_inv_travellersbackpack</code> <p></p> <p>Now let's middle mouse click on <code>PageItem 2333 (UndertaleTexturePageItem)</code>. (Alternatively, you can also double click it or even click the <code>...</code> button on the right.)</p> <p>Once on the PageItem for the backpack, let's change the position and bounding box size for the backpack to those in the screenshot below :</p> Screenshot - Editing Position and Bounding Box in <code>PageItem 2333</code> <p></p> Wait, what did we just do ? <p>I won't go into too much detail here but essentially :</p> <ul> <li>We changed the size and margins (padding) of the sprite in <code>s_inv_travellersbackpack</code>.</li> <li>Then we changed the size and position of the texture the sprite uses in <code>PageItem 2333</code>.</li> </ul> <p>Now that this is done, let's save our .win file.</p> <p>Info</p> <p>If you already have a backpack you can load up your save and test your changes. You might need to move the backpack in your inventory or drop it on the ground and pick it up for the change to take effect, as it was saved using the original size and not the new one.</p>"},{"location":"guides/bigger-backpacks/#spawning-the-backpack","title":"Spawning the backpack","text":"<p>Having a nice backpack that fits into a <code>2x3</code> space in your inventory is fine, but what if you don't have a backpack in your save ? How do you test your changes ?</p> <p>By spawning one out of thin air, obviously.  </p> Spawning the backpack <p>If you've read the Getting Started article, you already know half of how to achieve this. We're going to use the player's F4 KeyPress event in order to spawn the backpack ! </p> <ul> <li>First, let's search for <code>o_player</code> and find the player's gameobject.</li> <li>Once that's done, scroll down to the <code>KeyPress</code> events, and locate the <code>vk_f4</code> line.</li> <li>Then, simply double click on the <code>gml_Object_o_player_KeyPress_115</code> script to open it.</li> <li>This should open an empty code editor.</li> </ul> Screenshot - Locating o_player's KeyPress Events <p></p> <p>Now that we're in the code editor, let's write the following : <pre><code>with (o_inventory)\n    scr_inventory_add_item(o_inv_backpack)\n</code></pre></p> What's that command ? How does it work ? <p>Check the Useful Functions article to learn more. Alternatively, you can middle mouse click it to check out its code !</p> <p>Save your .win file, load up your save, hit F4 and you should get a shiny new backpack, which only takes <code>2x3</code> cells in your inventory.</p> <p>Reminder</p> <p>If you intend to share this mod, don't forget to remove the code we added in this section before creating your .xdelta file. If you don't, anyone will be able to spawn backpacks with the F4 key !</p>"},{"location":"guides/bigger-backpacks/#changing-the-capacity","title":"Changing the capacity","text":"<p>Now that we have a backpack we can spawn and that takes <code>2x3</code> cells in the inventory, let's see how to make it even better by holding more space.</p> 1. Changing the UI <p>In theory, we could make an entirely new texture or expand an existing one. But for the sake of simplicity and to save some time, we can just reuse an existing asset as is.</p> <p>We're going to reuse <code>s_container</code>, which is the sprite used for chests, wardrobes (etc.).  </p> Screenshot - Container Sprite <p></p> <p>First, let's find <code>o_container_backpack</code> and open it. Now, we're going to change its sprite from <code>s_container_backpack</code> to <code>s_container</code>. To do this, simply search for <code>s_container</code> in UML and drag it over the current one.</p> Screenshot - Changing the Sprite <p></p> 2. Adjusting the Code <p>Unlike inventory items, the capacity of containers (chests, wardrobes, backpacks...) is defined in the code and not simply based on the sprite's size.</p> <p>If we take a quick look at <code>o_backpack_container</code>, the only script it seems to have is <code>gml_Object_o_container_backpack_Other_10</code>. Let's open it by middle mouse clicking or double clicking it.</p> <p>We're going to replace the existing code with our own :</p> gml_Object_o_container_backpack_Other_10<pre><code>event_inherited()\ncloseButton = scr_adaptiveCloseButtonCreate(id, (depth - 1), 229, 3)\nwith (closeButton)\n    drawHover = 1\ngetbutton = scr_adaptiveTakeAllButtonCreate(id, (depth - 1), 230, 27)\nwith (getbutton)\n    owner = other.id\ncellsContainer = scr_guiCreate(id, o_guiContainer, depth, adaptiveOffsetX, adaptiveOffsetY)\ncellsRowSize = 7\nscr_inventory_add_cells(id, cellsContainer, cellsRowSize, 5, true)\n</code></pre> What does this code do ? <p>This code is responsible for creating the GUI element when the backpack is interacted with.</p> <p>We first changed the positioning of the <code>Close</code> and <code>Take all</code> buttons to match our new sprite. Then we changed the values for how many cells this container now holds.</p> <p>As usual, now we save our .win file and test our changes. Your backpack should now use the container sprite instead of its usual one and it should have <code>7x5</code> cells to store your items in.</p> <p>Tip</p> <p>If you had items in your backpack beforehand, it's possible they now overlap each other. You can fix this by taking them out of your backpack and picking them up again.</p>"},{"location":"guides/bigger-backpacks/#distributing-your-mod","title":"Distributing your mod","text":"<p>See Creating Mods in the DeltaPatcher article.</p>"},{"location":"guides/getting-started/","title":"Getting Started","text":"<p> 0.8.1.9</p>"},{"location":"guides/getting-started/#setting-up-your-environment","title":"Setting up your Environment","text":"<p>In order to make mods for Stoneshard you don't need much. There is only a few tools to use and a single file to edit.</p> <p>However, it's a good idea to stay organized. This will help make sure your time is spent working on your mod and not wasted trying to figure out which one of your data.win was the 0.8.0.27 version.</p> 1. Locating your game folder <p>First we're going to find our game folder. Its location differs depending on where you purchased the game :  </p> <ul> <li>Steam : <code>C:\\SteamLibrary\\steamapps\\common\\Stoneshard</code></li> <li>GOG : <code>C:\\Games\\Stoneshard</code></li> </ul> <p>It's a good idea to create a shortcut to this folder, or to pin it so you can access it easily.</p> 2. Backing up the data.win <p>The data.win file is the file containing all of the game's data. This includes everything from sprites to scripts, with some exceptions like sound, dialogs and fonts.</p> <p>It's necessary to keep an unmodded (or vanilla) data.win as a backup, mainly for when you need to check vanilla code but also and more importantly for creating .xdelta patches later when you want to distribute your mods.</p> <p>For now, let's simply rename your data.win to vanilla.win. <pre><code>data.win -&gt; vanilla.win\n</code></pre></p> Why renaming instead of making a backup ? <p>The reason why we rename the data.win to vanilla.win instead of making a backup like <code>data2.win</code> is pretty simple:</p> <p>When the game starts, it looks specifically for a file called <code>data.win</code>. If none is found, it will open a window to let you select what .win file to load up.</p> <p>This is a huge time saver and avoids having to rename your modded file to data.win. It's especially convenient when working on multiple mods at once.</p> 3. Installing the tools <p>Now that we've made a \"backup\" of our data.win file, it's time to install the tools we'll need to mod the game.</p> <p>Let's start by creating a folder anywhere on your PC. This is the folder where you will keep all your tools.</p> <p>Once that is done, check out the Tools section of the documentation for a list of tools and their download instructions. The only required tools are UndertaleModTool and DeltaPatcher, the rest is only useful for specific scenarios.</p> <p>For reference here is my folder structure :</p> B:\\Mods\\stoneshard-mods\\<pre><code>+ stoneshard-mods\n    - Tools\n        - UndertaleModTool\n        - DeltaPatcher\n        - HGPatcher\n        - GML To CSV Converter\n    - Art #(1)!\n        - ...\n    - Archives #(2)!\n        - 0.8.1.5\n        - 0.8.1.7\n        - 0.8.1.8\n        - 0.8.1.9\n</code></pre> <ol> <li> <p>This is a good place to store all the sprites you may create when modding.</p> </li> <li> <p>This is a good folder to create to store data.win for older versions of Stoneshard. Code is bound to change and being able to access older versions is key.</p> </li> </ol>"},{"location":"guides/getting-started/#creating-your-first-mod","title":"Creating your First Mod","text":"<p>Now that you've got your tools set up, let's get to work. For your first mod we're going to add a quicksave feature to the game when you press the F5 key.</p> <p>Info</p> <p>Yes, this is a fairly basic example, keep in mind that you can mod in way more interesting things in the game, but this guide is written for beginners and as such its aim is to demonstrate the mechanics of making a mod, not how to create content. This is for other guides to cover.</p> 1. Creating and opening your modded .win file <p>Let's head back to your game folder.</p> <p>In here, we're going to make a copy of <code>vanilla.win</code>.    You can call it whatever you want, I'll call mine <code>quicksave.win</code>.</p> <p>Once that's done, let's open <code>quicksave.win</code> with UMT by double clicking it.</p> <p></p> <p>Let's do a quick tour of the interface.</p> <ul> <li> <p>On the top left, you have a search bar. As expected you can use it to search the game's files. This search bar only works for finding files by names, not searching for content inside of files.</p> </li> <li> <p>Below this you will find the explorer, which lists all the files contained in the .win file. Files are placed in different \"Blocks\", based on what they are. The blocks you will use the most are the <code>Sprites</code>, <code>Game objects</code> and <code>Code</code>.</p> </li> <li> <p>Finally in the right pane is where the content of the files you open will be shown.</p> </li> </ul> 2. Adding the Script <p>Pressing the F5 key is an action the player is going to do, so it would make sense to attach the script we're going to write to the player's character.</p> <ul> <li>Let's start by searching for <code>o_player</code> in the search bar.  </li> <li>In the <code>Game objects</code> block, you should find <code>o_player</code> now.  </li> <li>Double click on it to open it in the right pane.</li> <li>Scroll down to the <code>KeyPress</code> Event.</li> </ul> <p></p> <p>Next to <code>vk_f5</code> is the script we want to edit, as this is the one that gets run when the player presses the F5 key.</p> <ul> <li>Double click on <code>gml_Object_o_player_KeyPress_116</code>. This should open an empty code editor.</li> <li> <p>Let's add the following code to it : <pre><code>scr_smoothSaveAuto()\nscr_actionsLogUpdate(\"Game Saved !\")\n</code></pre></p> </li> <li> <p>Save your quicksave.win. ( Ctrl+S or <code>File &gt; Save</code> at the top left of your screen)</p> </li> </ul> 3. Testing your mod <p>You've added your script, great ! But how do we know if our code works ? Testing !</p> <p>So let's get to it. Thankfully, this mod is pretty simple and testing it should take no time at all.</p> <ul> <li>Start the game, it should prompt your for which .win file to use, select <code>quicksave.win</code>.</li> <li>Once in game, load up into any of your saves, and hit the F5 key.</li> <li>The stoneshard logo should appear on the bottom right, and <code>\"Game Saved !\"</code> should appear in the Action Log on your left.</li> </ul> <p>Not working ?</p> <p>If something went wrong or this doesn't work, make sure to check the previous sections for mistakes. If it still doesn't work, feel free to message any of the maintainers on Discord  about it.</p>"},{"location":"guides/getting-started/#distributing-your-mod","title":"Distributing your mod","text":"<p>Our mod works and now we want to share it with other people. Sharing your data.win would technically work, but could be considered piracy since you're essentially sharing game files.</p> <p>Instead, we're going to use DeltaPatcher to create an .xdelta file that we can share online. Don't worry, this may sound complex but it's completely trivial.</p> Creating an .xdelta file <p>Read the \"Creating Mods\" section on the DeltaPatcher article.</p> <p>See guide here.</p>"},{"location":"guides/neoconsole/","title":"NeoConsole","text":"<p> 0.8.1.9</p> <p>Important - Modders Please Read</p> <p>Please do not share NeoConsole with end users.</p> <p>Do not make it into a mod and do not distribute it. Be careful not to leave it in a mod you're working on either.</p> <p>For now please use it as a convenient tool to help you create and test mods and nothing more.</p> <p>When it's stable enough and has achieved feature parity with the original console, we can release it for end users to do whatever they want with it.</p> <p>Part of this code was taken from Gamerev Games  \u00a0videos. This project wouldn't be a thing without him, so go check him out !</p>"},{"location":"guides/neoconsole/#description","title":"Description","text":"<p>NeoConsole is an ongoing project that is attempting to create a new developer console from scratch.</p> <p>The project is still at an early stage, and the current goal is to get a working console up and running without having to alter the game's behaviour in any way.</p> <p>The current state of NeoConsole is a working console with a multitude of scripts as well as various issues. We are still missing features the original developer console had, but we're getting there.</p>"},{"location":"guides/neoconsole/#setup","title":"Setup","text":"<p>Setting up NeoConsole takes anywhere from 5 to 20 minutes for someone familiar with UMT.</p> <p>While this isn't a particularly long time, be aware that a single small mistake can force you to restart, losing several minutes. In the long run, I'd like to introduce a UMT script to do all this delicate work for you, but for now, read thoroughly.</p>"},{"location":"guides/neoconsole/#scripts-commands","title":"Scripts (Commands)","text":"Warning <p>Due to limitations with UMT, currently, creating the scripts before anything that may call them is critically important. As such, it's strongly recommended to import every single script FIRST, and only then implementing the scripts or gameobjects that call them.</p> <p>If you don't, and for example you create the <code>o_neoconsole</code> Step Event BEFORE creating the <code>scr_neoconsole_log</code> script, UMT will be confused and will not find it, which will prevent the game from starting.</p> Importing the scripts <p>Importing the scripts is pretty straightforward :</p> <ul> <li>Download the .zip file below.</li> <li>Extract it anywhere.</li> <li>Use the <code>Scripts &gt; Resources Repackers &gt; ImportGML.csx</code> script in UMT for each of the folders.</li> <li>Make sure to import them in order (Core, Required, Base, Post) or else you will run into issues.</li> </ul> <p>NeoConsoleScripts.zip  Version 9.3 - [11/6/2023]</p> Reminder - commandsMap <p>If you added any non-standard script, make sure to also add them to the commandsMap in <code>scr_neoconsole_init</code> ! Otherwise, they won't be accessible through the console.</p> <p>It may also be a good idea to add an entry to the help command there to indicate how to use it !</p>"},{"location":"guides/neoconsole/#core-console","title":"Core Console","text":"1. Adding <code>o_neoconsole</code> <ul> <li>Create a new gameobject and change its name to <code>o_neoconsole</code>.</li> <li>When prompted, make sure to click on the <code>Change all occurences of this value</code> button.</li> <li>Finally, make sure to click on the <code>Persistent</code> checkbox to enable it.</li> </ul> 2. Registering in <code>sessionDataInit</code> <p>Find <code>gml_GlobalScript_scr_sessionDataInit</code> in UMT and add the following highlighted code to it :</p> Code gml_GlobalScript_scr_sessionDataInit<pre><code>function scr_sessionDataInit() //gml_Script_scr_sessionDataInit\n{\n    global.loadGameLocationProcess = 0\n    global.open_spells = 0\n    global.open_weapon_skills = 0\n    global.localX = 0\n    global.localY = 0\n    global.HP = -1\n    global.MP = -1\n    global.floor_counter = 0\n    global.failDungeonSeed = 0\n    global.enemyChasePattern = \"horizontal\"\n    global.turns = -1\n    global.contrattack = 0\n    global.music_position_map = 0\n    ds_list_clear(global.agred_enemy_list)\n    ds_map_clear(global.duplicatedRoomMap)\n    global.glmapPanelsVisible = 1\n    global.glmapLegendVisible = 1\n    global.glmapScale = 1\n    global.glmapGridX = -4\n    global.glmapGridY = -4\n    global.glmapUserMarkX = -4\n    global.glmapUserMarkY = -4\n    global.backfire_cd = 0\n    global.achRightBackatYou = 0\n    global.achFetchThis = 0\n    scr_locationPositionInit()\n    scr_characterMenuInit()\n    if (!global.is_load_game)\n        scr_init_quests()\n    audio_sound_gain(snd_skill_staticfield_hit, 0, 2000)\n    if (!instance_exists(o_console_controller))\n        instance_create_depth(0, 0, 0, o_console_controller)\n    if (!instance_exists(o_actionsLog))\n        instance_create_depth(0, 0, 0, o_actionsLog)\n    if (!instance_exists(o_music_controller))\n    {\n        with (instance_create_depth(0, 0, 0, o_music_controller))\n            stop_music = 1\n    }\n    if (!instance_exists(o_neoconsole))  \n\u00a0\u00a0\u00a0        instance_create_depth(0, 0, 0, o_neoconsole)\n}\n</code></pre> Explanations <ul> <li>The code we're adding in <code>sessionDataInit</code> creates the <code>o_neoconsole</code> gameobject if it doesn't exist already.</li> <li>It's run when a save is loaded or when a new game is started by the player.</li> <li>This is the only way the console is spawned into the world.</li> </ul> 3. Register in <code>persistentRoomController</code> <p>Find <code>gml_Object_persistentRoomController_Other_11</code> in UMT and add the following highlighted code to it :</p> Code gml_Object_persistentRoomController_Other_11<pre><code>var _drawLoading = gameState == 2\nvar _loadingImageIndex = 0\nwith (o_black_overlay)\n    _loadingImageIndex = loading.image_index\nds_list_clear(persistentDuplicatedRoomList)\naudio_stop_all()\nwith (o_player)\n{\n    create_corpse = 0\n    instance_destroy()\n}\nwith (o_unit)\n    persistent = 0\nscr_guiChildrenDestroy(global.guiBaseVisibleContainer)\nscr_guiChildrenDestroy(global.guiBaseHiddenContainer)\nscr_escapeButtonListClear()\ninstance_destroy(o_fullscreen_effects)\ninstance_destroy(o_shader_start)\ninstance_destroy(o_console_controller)\ninstance_destroy(o_neoconsole)\ninstance_destroy(o_actionsLog)\ninstance_destroy(o_music_controller)\ninstance_destroy(o_NPC, false)\nif (!((0 || global.playerGridX == -4)))\n    scr_glmap_destroyGrid()\nscr_waterSpritesCacheClear()\n__dsDebuggerMapDestroy(global.saveDataMap)\nwith (scr_smoothRoomChange(-4, gameState, 10, _drawLoading))\n{\n    with (blackOverlay)\n    {\n        image_alpha = 1\n        loading.image_index = _loadingImageIndex\n        loading.image_alpha = image_alpha\n    }\n    event_perform(ev_alarm, 0)\n}\n</code></pre> Explanations <ul> <li>This code destroys the console when run.</li> <li>It's mainly called when going back to the main menu.</li> </ul> 4. Registering in <code>dataLoader</code> <p>Find <code>gml_Object_o_dataLoader_Other_10</code> in UMT and add the following highlighted code to it :</p> Code gml_Object_o_dataLoader_Other_10<pre><code>global.bodypart = \"random\"\nglobal.campPresset = -4\nglobal.dungeon_controller = -4\nglobal.Upspeed = 0\nglobal.TurnDelay = 13\nglobal.globalMapInit = 0\nglobal.consoleEnabled = 0\nglobal.neoconsole_enabled = 0\nscr_slotsInit()\nscr_ds_init()\nscr_colorTextColorsMap(1)\nscr_skill_tier_init()\nscr_dayNightInit()\nscr_waterSpritesCacheInit()\nglobal.settingsMenuTab = 4394\nglobal.settingsMenuRecreate = 0\nglobal.saveErrorText = \"N/A\"\nglobal.skipTimeHours = -4\nglobal.skipTimeHungerChange = 0\nglobal.terrainGrid = -4\nglobal.fog = 1\nglobal.skill_can_cast = 1\nglobal.prologueTransition = 0\nglobal.permadeathMode = 0\nglobal.mainMenuRoom = 6\nglobal.credits_music = -4\nglobal.classesMap = __dsDebuggerMapCreate()\nscr_classCreate(o_verren, s_verren, \"Verren\", \"Male\", \"HumanAldor\", \"RelicSeeker\", 10, 10, 10, 10, 10, [global.pyromancy_tier1, global.pyromancy_tier2, global.geomancy_tier1, global.geomancy_tier2, global.electromancy_tier1, global.electromancy_tier2, global.swords_tier1, global.swords_tier2, global.maces_tier1, global.maces_tier2, global.daggers_tier1, global.daggers_tier2, global.swords2h_tier1, global.swords2h_tier2, global.shields_tier1, global.shields_tier2, global.staves_tier1, global.staves_tier2, global.bows_tier1, global.bows_tier2, global.axes_tier1, global.axes_tier2, global.combat_tier1, global.combat_tier2, global.athletics_tier1, global.athletics_tier2, global.polearms_tier1, global.polearms_tier2, global.dualwield_tier1, global.dualwield_tier2, global.greataxes_tier1, global.greataxes_tier2, global.greatmaces_tier1, global.greatmaces_tier2, global.armor_tier1, global.armor_tier2], [4335])\nscr_classCreate(o_revenger, s_Velmir, \"Velmir\", \"Male\", \"HumanSkadia\", \"Revenger\", 11, 11, 11, 10, 10, [global.polearms_tier1, global.greataxes_tier1, global.greatmaces_tier1, global.bows_tier1, global.athletics_tier1, global.combat_tier1], [4337])\nscr_classCreate(o_reaver, s_Jorgrim, \"Jorgrim\", \"Male\", \"Dwarf\", \"Reaver\", 11, 10, 11, 11, 10, [global.swords_tier1, global.axes_tier1, global.maces_tier1, global.greataxes_tier1, global.dualwield_tier1, global.combat_tier1], [4330])\nscr_classCreate(o_knight_maiden, s_ArnaDerVyrne, \"Arna\", \"Female\", \"HumanAldor\", \"KnightMaiden\", 11, 11, 10, 11, 10, [global.swords_tier1, global.swords2h_tier1, global.greatmaces_tier1, global.shields_tier1, global.armor_tier1, global.combat_tier1], [4331])\nscr_classCreate(o_woodward, s_Dirwin, \"Dirwin\", \"Male\", \"HumanAldor\", \"Woodward\", 10, 11, 11, 11, 10, [global.daggers_tier1, global.axes_tier1, global.greataxes_tier1, global.staves_tier1, global.bows_tier1, global.athletics_tier1], [4332])\nscr_classCreate(o_runaway_wizzard, s_Jonna, \"Jonna\", \"Female\", \"HumanAldor\", \"RunawaySorceress\", 10, 10, 11, 11, 11, [global.staves_tier1, global.pyromancy_tier1, global.geomancy_tier1, global.electromancy_tier1, global.magic_mastery_tier1, global.athletics_tier1], [4333])\nglobal.player_class = -4\nglobal.Osbrook = [4, 4]\nglobal.OsbrookTavernSleepIsOpen = 0\nglobal.is_load_game = 0\nglobal.is_devinfo = 0\nglobal.spriteOriginEditor = 0\nglobal.npc_animation_mode = 0\nglobal.skill_test = 0\nglobal.sightPlacelistEditor = 0\nglobal.devCamera = 0\nglobal.devCameraSpeed = 2\nglobal.is_teleporting = 0\nglobal.is_nocd = 0\nglobal.gridInfo = 0\nglobal.gridPosInfo = 0\nglobal.weatherInfo = 0\nglobal.fadeInfo = 0\nglobal.HP = -1\nglobal.MP = -1\nglobal.audiodebug = 0\nglobal.enemyinfo = 0\nglobal.RecivedDamage = 0\nglobal.AllDamage = 0\nglobal.position_tag = \"NA\"\nglobal.presset_map = __dsDebuggerMapCreate()\nglobal.timeScale = 1\nglobal.attack_mode_on = 0\nglobal.skill_select = 0\nglobal.skill_activate = 0\nglobal.transition_done = 0\nglobal.transition_scale = 1\nglobal.globalmaptest = 0\nglobal.playerGodMode = 0\nglobal.playerNoDeathMode = 0\nglobal.playerNoPain = 0\nglobal.in_steam = 1\nglobal.steam_api = 1\nglobal.steem_screenshot_counter = 0\nglobal.read_diary[2] = 0\nglobal.read_diary[3] = 0\nglobal.read_diary[4] = 0\nglobal.read_diary[5] = 0\nglobal.read_diary[6] = 0\nglobal.bad_luck[0] = 0\nglobal.bad_luck[1] = 0\nglobal.bad_luck[2] = 0\nglobal.bad_luck[3] = 0\nglobal.bad_luck[4] = 0\nglobal.bad_luck[5] = 0\nglobal.bad_luck[6] = 0\nglobal.bad_luck[7] = 0\nglobal.magalomania_value = 0\nglobal.target = -4\nglobal.checkpoint = room\nglobal.cryptchance = 0\nglobal.localX = 0\nglobal.localY = 0\nglobal.UI_is_on = 1\nglobal.checkpoint = 5\nglobal.inv_select = 0\nglobal.scrollbar_drag = 0\nglobal.gen_wall = __dsDebuggerListCreate()\nglobal.roompoint = 0\naudio_falloff_set_model(4)\nglobal.hunger_count = 0\nglobal.thirsty_count = 0\nglobal.GFX = 0\nif shaders_are_supported()\n{\n    if shader_is_compiled(sh_whiteblend)\n        global.GFX = 1\n}\nglobal.miniboss_type = scr_tableLoad(gml_Script_table_Miniboss_type)\ninit_damage_material_constatns()\nglobal.inst_snd = -4\nglobal.choir_snd = -4\nglobal.crypts = __dsDebuggerListCreate()\nglobal.agred_enemy_list = __dsDebuggerListCreate()\nglobal.main_part = part_system_create()\nglobal.dustpart = part_type_create()\nglobal.whitepart = part_type_create()\npart_type_sprite(global.whitepart, 1607, 0, 1, 1)\npart_type_size(global.whitepart, 0.5, 1, 0.05, 0)\npart_type_scale(global.whitepart, 1, 1)\npart_type_orientation(global.whitepart, 0, 77, 0, 0, 0)\npart_type_color3(global.whitepart, 6911105, 4212565, 4010044)\npart_type_alpha3(global.whitepart, 0.62, 0.36, 0)\npart_type_blend(global.whitepart, 0)\npart_type_life(global.whitepart, 10, 25)\npart_type_speed(global.whitepart, 1, 1, 0, 1)\npart_type_direction(global.whitepart, -46, 143, 0, 0)\npart_type_gravity(global.whitepart, 0, 0)\npart_type_sprite(global.dustpart, 1616, 0, 1, 1)\npart_type_size(global.dustpart, 1, 1, 0, 0)\npart_type_alpha3(global.dustpart, 0, 0.5, 0)\npart_type_speed(global.dustpart, 0.1, 0.5, 0, 0)\npart_type_gravity(global.dustpart, 0, 0)\npart_type_direction(global.dustpart, 0, 359, 0, 0)\npart_type_orientation(global.dustpart, 0, 0, 0, 0, 0)\npart_type_colour1(global.dustpart, make_colour_rgb(255, 235, 172))\npart_type_life(global.dustpart, 40, 100)\npart_system_depth(global.main_part, -3000)\nglobal.pt_steam = part_type_create()\npart_type_shape(global.pt_steam, 0)\npart_type_sprite(global.pt_steam, 1632, 1, 0, 0)\npart_type_size(global.pt_steam, 1, 1, 0.15, 0)\npart_type_scale(global.pt_steam, 0.08, 0.08)\npart_type_orientation(global.pt_steam, 0, 0, 0, 0, 0)\npart_type_color3(global.pt_steam, 14868188, 16777215, 16777215)\npart_type_alpha3(global.pt_steam, 0.41, 0, 0)\npart_type_blend(global.pt_steam, 0)\npart_type_life(global.pt_steam, 25, 40)\npart_type_speed(global.pt_steam, 0.2, 1, 0, 0)\npart_type_direction(global.pt_steam, 149, 184, 0, 0)\npart_type_gravity(global.pt_steam, 0, 0)\nglobal.campsmoke = part_system_create()\npart_system_depth(global.campsmoke, -3000)\nglobal.pt_CampfireSmoke = part_type_create()\npart_type_shape(global.pt_CampfireSmoke, 10)\npart_type_sprite(global.pt_CampfireSmoke, 1633, 0, 0, 0)\npart_type_size(global.pt_CampfireSmoke, 0.01, 0.3, 0.01, 0)\npart_type_scale(global.pt_CampfireSmoke, 1, 1)\npart_type_orientation(global.pt_CampfireSmoke, 90, 107, 0, 0, 0)\npart_type_color3(global.pt_CampfireSmoke, 5863078, 6716795, 5592405)\npart_type_alpha3(global.pt_CampfireSmoke, 0.78, 0.21, 0)\npart_type_blend(global.pt_CampfireSmoke, 0)\npart_type_life(global.pt_CampfireSmoke, 80, 80)\npart_type_speed(global.pt_CampfireSmoke, 0.03, 1, 0, 0)\npart_type_direction(global.pt_CampfireSmoke, 100, 100, 0, 0)\npart_type_gravity(global.pt_CampfireSmoke, 0.04, 125)\nglobal.smokeParticleSystem = part_system_create()\npart_system_depth(global.smokeParticleSystem, -3000)\nglobal.smokeParticle = part_type_create()\npart_type_sprite(global.smokeParticle, 1642, 0, 0, 1)\npart_type_orientation(global.smokeParticle, 0, 0, 0.15, 0, 0)\npart_type_alpha3(global.smokeParticle, 0, 0.3, 0)\npart_type_blend(global.smokeParticle, 0)\npart_type_life(global.smokeParticle, room_speed, (room_speed * 4))\npart_type_speed(global.smokeParticle, 0, 0, 0, 0)\npart_type_direction(global.smokeParticle, 0, 360, 0, 0)\npart_type_gravity(global.smokeParticle, 0, 0)\ninstance_destroy()\n</code></pre> Explanations <ul> <li>This code initializes the console's global variables when run.</li> <li>It's called when you load load the game.</li> </ul> 5. Adding Create Event in <code>o_neoconsole</code> <p>Add a <code>Create</code> event for <code>o_neoconsole</code> and add the following code to it :</p> Code o_neoconsole - Create Event<pre><code>global.neoconsole_enabled = 0 #(1)!\nglobal.neoconsole_toggle_key = vk_f2 #(2)!\ntext_ = \"\"\ntext_def = \"&gt;. \" #(3)!\ntext_[0] = \"\"\ntext_currentline = text_def #(4)!\nerase = -1\nlastcommand = \"\"\ncursor = \"|\" #(5)!\ncursor_blink_delay = 15 #(6)!\nalarm[0] = cursor_blink_delay\nfont = f_dmg_eu #(7)!\nhsize = window_get_width() #(8)!\nvsize = window_get_height() #(9)!\ntext_background_color = c_black #(10)!\ntext_background_alpha = 0.6 #(11)!\ntext_primary_color = c_white #(12)!\ntext_primary_alpha = 0.9 #(13)!\ntext_line_color = c_white #(14)!\ntext_line_alpha = 0.6 #(15)!\ntext_line_background = c_black #(16)!\ncommandsMap = ds_map_create()\nhelpSyntaxMap = ds_map_create()\nhelpUsageMap = ds_map_create()\nscr_neoconsole_init() #(17)!\nscr_neoconsole_log(\"NeoConsole : \" + string(ds_map_size(commandsMap)) + \" scripts loaded.\")\nscr_neoconsole_log(\"NeoConsole : \" + string(ds_map_size(helpUsageMap)) + \" helps loaded.\")\nscr_neoconsole_log(\"NeoConsole : Made with a lot of pain by Nylux\")\n</code></pre> <ol> <li>This global variable defines whether the console is currently opened or not.</li> <li>Defines the key that needs to be pressed to toggle the console on or off.See this page for other valid keys.</li> <li>Defines the prompt for your console, the characters that are shown before you type in it.</li> <li>text_currentline holds the characters you're typing in the console.</li> <li>Cursor starting position.</li> <li>Delay in frames before your cursor blinks.</li> <li>Name of the font asset to use in your console.This one is included in Stoneshard by default.</li> <li>Width of your console window.</li> <li>Height of your console window.</li> <li>Background color of your console window.</li> <li>Opacity (alpha) of your console window's background.</li> <li>Text color in your console. See this page for more.</li> <li>Text opacity in your console.</li> <li>Text color in your input line.</li> <li>Opacity of your input line's background.</li> <li>Background color of your input line.</li> <li>Function that contains the shortname for all the commands as well as their documentation for the help command.</li> </ol> Explanations <p>This documentation uses annotations to provide line per line descriptions. Make sure you read them to know what each variable does !</p> <p>Feel free to modify some of these values ! They're mostly used for styling so you should be fine.</p> 6. Adding Destroy Event in <code>o_neoconsole</code> <p>Add a <code>Destroy</code> event for <code>o_neoconsole</code> and add the following code to it : o_neoconsole - Destroy Event<pre><code>ds_map_destroy(commandsMap) #(1)!\ncommandsMap = -1\nds_map_destroy(helpSyntaxMap) #(3)!\nhelpSyntax = -1\nds_map_destroy(helpUsageMap) #(4)!\nhelpUsageMap = -1\nglobal.neoconsole_enabled = 0 #(2)!\n</code></pre></p> <ol> <li>Destroys the ds_map holding the shortnames for scripts since we don't need it if the console is destroyed.</li> <li>Disabling the global variable as the console can't be opened if it's destroyed.</li> <li>Destroys the ds_map holding the syntax help for scripts since we don't need it if the console is destroyed.</li> <li>Destroys the ds_map holding the usage help for scripts since we don't need it if the console is destroyed.</li> </ol> 7. Adding Alarm 0 Event in <code>o_neoconsole</code> <p>Add a <code>Alarm 0</code> event for <code>o_neoconsole</code> and add the following code to it :</p> o_neoconsole - Alarm 0 Event<pre><code>if (cursor == \"|\")\n    cursor = \"\"\n\nelse\n    cursor = \"|\"\n\nalarm[0] = cursor_blink_delay #(1)!\n</code></pre> <ol> <li>Calls this code again after the amount of frames defined in <code>cursor_blink_delay</code>.</li> </ol> Explanations <p>This is the code responsible for blinking the console's cursor. If you want to change what your cursor looks like, this is the place to do it.</p>"},{"location":"guides/neoconsole/#logic-rendering","title":"Logic &amp; Rendering","text":"1. Adding Step Event in <code>o_neoconsole</code> <p>Add a <code>Step</code> event for <code>o_neoconsole</code> and add the following code to it :</p> Code o_neoconsole - Step Event<pre><code>if (keyboard_check_pressed(global.neoconsole_toggle_key)) #(1)!\n    scr_neoconsole_enable()\n\nif global.neoconsole_enabled = false #(2)!\n    exit\n\nif (keyboard_check(vk_backspace) &amp;&amp; (string_length(text_currentline) &gt; string_length(text_def))) #(3)!\n{\n    if (erase &gt;= 2) #(4)!\n    {\n        text_currentline = string_copy(text_currentline, 1, string_length(text_currentline)-1)\n        erase = 0\n    }\n    else\n        erase++\n}\nif keyboard_check(vk_up) #(12)!\n    text_currentline = lastcommand\n\nvar command = \"\"\nvar arg\narg[0] = \"\"\nvar argCount = 0\n\nif (keyboard_check_released(vk_enter) &amp;&amp; string_length(text_currentline) &gt; string_length(text_def)) #(5)!\n{\n    lastcommand = text_currentline\n    text_currentline = text_currentline + \" \" #(6)!\n    var word = \"\"\n\n    for(var i = string_length(text_def); i &lt; string_length(text_currentline); i++)\n    {\n        var next_char = string_char_at(text_currentline, i+1)\n        if (next_char != \" \")\n            word += next_char\n        else\n        {\n            if (command == \"\")  \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{  \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if ds_map_exists(commandsMap, word)  #(7)!\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{  \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0command = string(ds_map_find_value(commandsMap, word))  \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0word = \"\"   \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}  \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else  #(8)!\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{  \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0scr_neoconsole_log(text_currentline)  \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0scr_neoconsole_log(\"Unknown command.\")  \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0command = \"\"  \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0word = \"\"  \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break  \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}  \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n            else\n            {\n                arg[argCount] = word\n                argCount++\n                word = \"\"\n            }\n        }\n    }\n\n    if (script_exists(asset_get_index(command))) #(9)!\n    {\n        scr_neoconsole_log(text_currentline)\n        script_execute_ext(asset_get_index(command), arg)\n    }\n}\n\nif (keyboard_lastkey != -1)\n{\n    switch(keyboard_lastkey) #(10)!\n    {\n        case vk_shift:\n        case vk_lshift:\n        case vk_rshift:\n        case vk_control:\n        case vk_lcontrol:\n        case vk_rcontrol:\n        case vk_alt:  \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0case vk_lalt:  \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0case vk_ralt:\n        case vk_up:\n        case vk_down:\n        case vk_left:\n        case vk_right:\n        case vk_enter:\n        case global.neoconsole_toggle_key:\n        case vk_backspace:\n            keyboard_lastkey = -1\n            keyboard_lastchar = -1\n            exit\n        break\n    }\n    text_currentline += keyboard_lastchar #(11)!\n    keyboard_lastkey = -1\n}\n</code></pre> <ol> <li>This block is responsible for toggling the console on or off when the key defined in the Create Event is pressed.</li> <li>If the console is not opened, we stop here.</li> <li>This block is responsible for erasing characters when Backspace is pressed.</li> <li>Here <code>2</code> is the cooldown in frames between each character being erased. Should probably be its own variable in Create Event.</li> <li>This block is responsible for parsing user input when the Enter key is pressed.</li> <li>Necessary black magic for the string to behave properly.I don't know either, don't ask.</li> <li>Looking up the ds_map we created in the Create Event to check if the command exists.If it does, we assign the full script name to the command variable.</li> <li>If the command doesn't exist, we log the line and a message to let the user know.</li> <li>If the command was found, we run it here.</li> <li>The list of all the keys we don't want to be interpreted as text input in the console.</li> <li>If the character the user inputted isn't part of the exception list, we add it to current_line.</li> <li>If the arrow up key is pressed, we replace the current line with whatever command was typed last.</li> </ol> 2. Adding DrawGUI Event in <code>o_neoconsole</code> <p>Add a <code>DrawGUI</code> event for <code>o_neoconsole</code> and add the following code to it :</p> Code o_neoconsole - DrawGUI Event<pre><code>if(global.neoconsole_enabled = true)\n{\n    draw_set_color(text_background_color) #(1)!\n    draw_set_alpha(text_background_alpha)\n    draw_rectangle(0, 0, hsize, vsize, false)\n\n    draw_set_color(text_line_background) #(2)!\n    draw_set_alpha(text_line_alpha)\n    draw_rectangle(0, vsize-20, hsize, vsize, false)\n\n    draw_set_font(font) #(3)!\n    draw_set_color(text_primary_color)\n    draw_set_alpha(text_primary_alpha)\n    draw_set_valign(fa_bottom)\n    var text_lines = array_length(text_)\n\n    for(var i = 0; i &lt; text_lines; i++)\n    {\n        var line_size\n        line_size = string_height(string_hash_to_newline(text_[i]))\n        draw_text_ext(4, vsize-(i*line_size)-32, string_hash_to_newline(text_[i]), -1, hsize)\n    }\n\n    draw_set_color(text_line_color)\n    draw_set_alpha(text_line_alpha)\n    draw_set_valign(fa_top)\n    draw_text(4, vsize-20, string_hash_to_newline(text_currentline + cursor))\n}\n</code></pre> <ol> <li>Draws the GUI for the console.</li> <li>Draws the GUI for the user input line.</li> <li>Draws the text and handles text-wrapping.</li> </ol>"},{"location":"guides/neoconsole/#input-isolation","title":"Input Isolation","text":"<p>Now that we have a working console, if you hop in-game right now, you will notice something annoying happening when you type into the console :</p> <p>Your keys are still being read by the game and you're accidentally opening your inventory, character menu or even the map ! You're also resting or skipping turns while typing !</p> <p>This is because the game checks only if the original console is opened or not before doing these things, but doesn't check if ours is.</p> The Choice <p>And this is the part where I have to warn you. There is an easy fix for this, but I don't like it. Let me explain :</p> <p>By hijacking the global variable that the original console uses, we can prevent this issue.  </p> <p>But why is that bad, it works right ?</p> <p>Yes, it does but that's missing the point :</p> <p>The goal of NeoConsole is to be completely standalone, and to not rely on code from the original console, as the developers could remove it at any time. They have already started doing this by removing all the scripts (godmode, enemyinfo, teleport...), and it's only a matter of time before they remove the rest of the original console including, you guessed it, the global variable we want to hijack.</p> <p>The day this happens, NeoConsole will also stop working if we don't do anything about it.</p> Method 1 - Easy Fix (Not future-proof) <p>Open the <code>scr_neoconsole_enable</code> script we created earlier, and add the following highlighted code to it : scr_neoconsole_enable<pre><code>function scr_neoconsole_enable()\n    {\n        if instance_exists(o_neoconsole)\n        {\n            global.neoconsole_enabled = (!global.neoconsole_enabled)\n            global.consoleEnabled = global.neoconsole_enabled\n        }\n    }\n</code></pre></p> <p>This will hijack and toggle the original console's global variable and prevent opening your inventory and such when your console is open.</p> Method 2 - Harder Fix (Standalone &amp; future-proof) <p>We are going to be replacing the places in the game where it checks if the original console is opened to check if our console is opened instead.  </p> <p>The problem with this approach is that some of these scripts will simply not compile back when edited. The only way to force it to compile is by editing the bytecode (assembly) instead of the decompiled code.</p> <p>This is due to a limitation with UMT.  As it's using an outdated compiler, it cannot recognize some newer features of GML and won't be able to compile.</p> <p>In the following scripts, Replace <code>if (!global.consoleEnabled)</code> with <code>if (!global.consoleEnabled &amp;&amp; !global.neoconsole_enabled)</code> :</p> <ul> <li>gml_GlobalScript_scr_is_pressed_key</li> <li>gml_GlobalScript_scr_is_key</li> <li>gml_GlobalScript_scr_keyboard_control</li> <li>gml_Object_oCamera_Step_1</li> <li>gml_Object_o_abilities_Step_0</li> <li>gml_Object_o_Attitude_Step_0</li> </ul> <p>In gml_Object_o_music_button_Step_1 :</p> <ul> <li>Replace <code>if ((!global.consoleEnabled) &amp;&amp; (!pressed))</code></li> <li>With <code>if ((!global.consoleEnabled) &amp;&amp; (!global.neoconsole_enabled) &amp;&amp; (!pressed))</code></li> </ul> <p>In the gml_Object_o_inv_switch_Other_10,  </p> <ul> <li>Replace <code>if global.consoleEnabled</code></li> <li>With <code>if global.consoleEnabled || global.neoconsole_enabled</code></li> </ul> <p>Now come the 2 annoying scripts that will require you to edit bytecode :</p> <p>In gml_Object_o_button_actionkey_Step_1 :</p> <ul> <li> <p>Replace <pre><code>:[0]\npushglb.v global.consoleEnabled\nconv.v.b\nnot.b\nbf [2]\n\n:[1]\npush.v self.pressed\nconv.v.b\nnot.b\nb [3]\n</code></pre></p> </li> <li> <p>With <pre><code>:[0]\npushglb.v global.consoleEnabled\nconv.v.b\nnot.b\nbf [800]\n\npushglb.v global.neoconsole_enabled\nconv.v.b\nnot.b\nb [801]\n\n:[800]\npush.e 0\n\n:[801]\nbf [2]\n\n:[1]\npush.v self.pressed\nconv.v.b\nnot.b\nb [3]\n</code></pre></p> </li> </ul> <p>In gml_Object_o_player_Step_0 :</p> <ul> <li>Replace <pre><code>:[151]\npushglb.v global.consoleEnabled\nconv.v.b\nnot.b\nbf [209]\n\n:[152]\npush.v self.lock_movement\nconv.v.b\nnot.b\nbf [209]\n</code></pre></li> <li>With <pre><code>:[151]\npushglb.v global.consoleEnabled\nconv.v.b\nnot.b\nbf [800]\n\npushglb.v global.neoconsole_enabled\nconv.v.b\nnot.b\nb [801]\n\n:[800]\npush.e 0\n\n:[801]\nbf [209]\n\n:[152]\npush.v self.lock_movement\nconv.v.b\nnot.b\nbf [209]\n</code></pre></li> </ul>"},{"location":"guides/neoconsole/#issues","title":"Issues","text":"Issue Number Priority Complexity Description 1 Mid ? Deleting text in the console is inconsistent. Not sure what causes this. 2 Low Hard The <code>log</code> command currently only supports writing with the default color.Should add a way to write with any.Will require rewriting the entire rendering side of the console. 3 High Hard There is no scrolling feature for the console, the help command can't be displayed completely because of this. 4 Low Medium Importing scripts has gotten better, but it still takes time and isn't very convenient.Need to write a .csx script to import them in a given order. 5 Low Hard Some of the modifications are slow and painful, it would need to be fully automated with a .csx script. 6 Low Medium Some scripts don't work and need to be fixed."},{"location":"guides/working-with-tables/","title":"Working with Tables","text":"<p> 0.8.1.9</p>"},{"location":"guides/working-with-tables/#description","title":"Description","text":"<p>Item properties and descriptions aren't defined on gameobjects themselves but in tables that both look and work similarly to the CSV format.</p> <p>Tables usually begin with <code>gml_globalscript_table</code> in their name and are located in the \"CODE\" block.</p> <p>Warning</p> <p>It is HEAVILY recommended to save your data.win changes before messing with tables, as those are very prone to crash UMT and could cause the loss of any unsaved changes.</p>"},{"location":"guides/working-with-tables/#reading-writing-tables","title":"Reading &amp; Writing Tables","text":"<p>To read and edit the tables, using UMT isn't practical as it's both laggy with big files, and doesn't provide a clear interface to know which column you're trying to modify.</p> <p>As such, you should use the GML to CSV Converter. A detailed guide of how to use it is available on its page, but here's a quick rundown :</p> GML to CSV Converter Guide <ul> <li>Make sure you have the .Net Core 3.1 installed.</li> <li>Download and extract CSV_GML_Converter.</li> <li>Extract the GML tables in the same folder with <code>UMT &gt; Scripts &gt; Resource Unpacker &gt; Dump Specific Code</code> and specify the names of the files containing the tables you want to extract.</li> <li>Once done, open up <code>CSV_GML_converter_and_editor.exe</code>, and press the key corresponding to the name of the file to be converted.</li> <li>Your .csv file will be generated, you can open it in several applications, including Google Docs or Excel.</li> </ul>"},{"location":"guides/working-with-tables/#content","title":"Content","text":"<p>Usually, all properties of an object won't necessarily be in a single table. A clear example of this are consumables :</p> <p>Their properties are stored in <code>gml_GlobalScript_table_Consumable_Parameters</code> while their description and translations are stored in <code>gml_GlobalScript_table_consumables</code>.</p> <p>A list of more or less documented tables can be found here.</p> <p>Warning</p> <p>Missing or misplaced elements in tables or corrupted tables can cause game crashes or unintended behaviours.</p>"},{"location":"references/events/","title":"Events","text":""},{"location":"references/events/#disclaimer","title":"Disclaimer","text":"<p>Info</p> <p>This page shouldn't really be in this documentation as it's more about Gamemaker Studio than it is about Stoneshard Modding, but since it's fundamental knowledge to mod the game, it will stay for now.</p> <p>I will write a proper article when I've got the time for it.</p> <p>This video by Let's Learn This Together pretty much covers what events are and what they do in GameMaker Studio 2.</p>"},{"location":"references/tables/","title":"Tables","text":"<p>This article will contain informations about tables. They're found in the <code>CODE</code> block in UMT and usually start with <code>gml_GlobalScript_table</code>. For more info on what those are see this article.  </p> <p>For the tool used to convert tables into .csv files for better readability / editing, see GML to CSV Converter.  </p> Info <p><code>Unnamed:XX</code> or <code>nan</code> in the table format section means the cell is empty. It looks weird, but it's simply an issue with how we import tables in this documentation. The actual gml table in your game will simply have empty cells at those locations.</p> <p>Attribute descriptions with the  icon indicate untested, poorly understood or unknown behaviours. No  icon doesn't automatically mean the description is accurate or correct.</p> <p>As this is still a very early version of the documentation, errors can slip through, so feel free to contact maintainers or to edit this page yourself.</p> gml_GlobalScript_table_enemy_balance gml_GlobalScript_table_skills_stat"},{"location":"references/tables/#gml_globalscript_table_enemy_balance","title":"gml_GlobalScript_table_enemy_balance","text":"<p> 0.8.1.9</p> <p>Content : This table contains various stats about the enemies present in Stoneshard, including their level, weapon types, factions, hit chances, resistances and many others.</p> <p>Table Format :  </p> name LVL ID type faction pattern spawn_type weapon armor SU size matter EF Unnamed: 13 XP HP MP Head_DEF Body_DEF Arms_DEF Legs_DEF Unnamed: 21 Hit_Chance EVS PRR Block_Power Block_Recovery CRT CRTD CTA FMB Miscast_Chance Fortitude STL Health_Restoration MP_Restoration Cooldown_Reduction Knockback_Resistance Stun_Resistance Bleeding_Resistance Unnamed: 40 Bleeding_Chance Stun_Chance Daze_Chance Knockback_Chance Immob_Chance Stagger_Chance Unnamed: 47 STR AGL Vitality PRC WIL Unnamed: 53 Damage_Returned VIS Bonus_Range Lifesteal Manasteal Healing_Received Avoiding_Chance Unnamed: 61 Head Torso Left_Leg Right_Leg Left_Hand Right_Hand IP Pain_Resistance Morale Threat_Time Unnamed: 72 Bodypart_Damage Magic_Power Armor_Piercing Slashing_Damage Piercing_Damage Blunt_Damage Rending_Damage Fire_Damage Shock_Damage Poison_Damage Caustic_Damage Frost_Damage Arcane_Damage Unholy_Damage Sacred_Damage Psionic_Damage x Physical_Resistance Natural_Resistance Magical_Resistance x.1 Slashing_Resistance Piercing_Resistance Blunt_Resistance Rending_Resistance Fire_Resistance Shock_Resistance Poison_Resistance Caustic_Resistance Frost_Resistance Arcane_Resistance Unholy_Resistance Sacred_Resistance Psionic_Resistance x.2 canBlock canDisarm canSwim Swimming_Cost Skeleton Swordsman 4 o_skeleton_swordsman undead Undead Melee Melee sword Light 9 medium bones 461 nan 70 65 40 nan 2 1 1 nan 70 nan 10 10 -5 nan nan nan 30 nan nan nan 0 6 35 nan 20 nan nan 10 nan nan nan nan nan nan 14 12 10 12 10 nan nan 6 nan nan nan nan nan nan 1 1 1 1 1 1 75 100 nan nan nan 5 nan 10 13 nan nan nan nan nan nan nan nan nan 2 nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan -50 nan nan 1 nan nan 2 <p>Attributes :</p> Type Name Description <code>String</code> name The name of the enemy. <code>Integer</code> LVL The level of the enemy. <code>String</code> ID The ID of the enemy. <code>String</code> type The enemy type of the enemy. <code>String</code> faction The faction the enemy belongs to. <code>String</code> pattern The AI pattern for this enemy. <code>String</code> spawn_type The type of spawn for the enemy. \u00a0  <code>String</code> weapon The type of weapon the enemy will spawn with. <code>String</code> armor The type of armor the enemy will spawn with. <code>Integer</code> SU Spawn weight for the enemy. <code>String</code> size The size category for the enemy. <code>String</code> matter The matter this enemy is mainly made out of. <code>Integer</code> EF \"Inner Calculating\" according do a dev. \u00a0  <code>Integer</code> XP The amount of XP given when the enemy is killed. <code>Integer</code> HP The amount of HP the enemy has. <code>Integer</code> MP The amount of MP the enemy has. <code>Integer</code> Head_DEF <code>Integer</code> Body_DEF <code>Integer</code> Arms_DEF <code>Integer</code> Legs_DEF <code>Integer</code> Hit_Chance The % of chance the enemy's attack have to hit. <code>Integer</code> EVS The % of chance the enemy has to dodge an attack. <code>Integer</code> PRR The % of chance the enemy has to block an attack. <code>Integer</code> Block_Power The maximum amount of damage the enemy can block. Recovers each turn. <code>Integer</code> Block_Recovery The amount of block power the enemy recovers each turn. <code>Integer</code> CRT The % of chance the enemy has to deal a critical hit. <code>Integer</code> CRTD The additional damage the enemy deals on a critical hit. \u00a0  <code>Integer</code> CTA The % of chance the enemy has to counterattack when hit. <code>Integer</code> FMB The % of chance the enemy has to fumble an attack. <code>Integer</code> Miscast_Chance The % of chance the enemy has to miscast a spell. <code>Integer</code> Fortitude <code>?</code> STL Stealthiness of the enemy. Currently not implemented in the game. <code>Integer</code> Health_Restoration Either the amount of health, the % of health or the chance for the enemy to recover health. \u00a0  <code>Integer</code> MP_Restoration Same as Health_Restoration. \u00a0  <code>Integer</code> Cooldown_Reduction <code>Integer</code> Knockback_Resistance <code>Integer</code> Stun_Resistance <code>Integer</code> Bleeding_Resistance <code>Integer</code> Bleeding_Chance <code>Integer</code> Stun_Chance <code>Integer</code> Daze_Chance <code>Integer</code> Knockback_Chance <code>Integer</code> Immob_Chance <code>Integer</code> Stagger_Chance <code>Integer</code> STR The Strength ability score of the enemy. <code>Integer</code> AGL The Agility ability score of the enemy. <code>Integer</code> Vitality The Vitality ability score of the enemy. <code>Integer</code> PRC The Perception ability score of the enemy. <code>Integer</code> WIL The Willpower ability score of the enemy. <code>Integer</code> Damage_Returned The amount of damage dealt to the attacker when the enemy is attacked. <code>Integer</code> VIS The vision range of the enemy. <code>Integer</code> Bonus_Range <code>Integer</code> Lifesteal Either the flat amount, the amount %, or the chance of stealing health when the enemy attacks. \u00a0  <code>Integer</code> Manasteal Either the flat amount, the amount %, or the chance of stealing mana when the enemy attacks. \u00a0  <code>Integer</code> Healing_Received <code>Integer</code> Avoiding_Chance <code>Integer</code> Head The amount of heads the enemy has (leave empty if none) <code>Integer</code> Torso The amount of torsos the enemy has (leave empty if none) <code>Integer</code> Left_Leg The amount of left legs the enemy has (leave empty if none) <code>Integer</code> Right_Leg The amount of right legs the enemy has (leave empty if none) <code>Integer</code> Left_Hand The amount of left hands the enemy has (leave empty if none) <code>Integer</code> Right_Hand The amount of right hands the enemy has (leave empty if none) <code>Integer</code> IP Injury Protection, the % of chance to not produce an injury when hit. <code>Integer</code> Pain_Resistance <code>Integer</code> Morale <code>Integer</code> Threat_Time The amount of time animals stay threatened before becoming hostile. <code>Integer</code> Bodypart_Damage The % of damage this enemy deals to bodyparts when attacking. <code>Integer</code> Magic_Power The damage effectiveness of the enemy's spells. <code>Integer</code> Armor_Piercing The % of the damage that will ignore armor. <code>Integer</code> Slashing_Damage The amount of slashing damage the enemy's attacks deal. <code>Integer</code> Piercing_Damage The amount of piercing damage the enemy's attacks deal. <code>Integer</code> Blunt_Damage The amount of blunt damage the enemy's attacks deal. <code>Integer</code> Rending_Damage The amount of rending damage the enemy's attacks deal. <code>Integer</code> Fire_Damage The amount of fire damage the enemy's attacks deal. <code>Integer</code> Shock_Damage The amount of shock damage the enemy's attacks deal. <code>Integer</code> Poison_Damage The amount of poison damage the enemy's attacks deal. <code>Integer</code> Caustic_Damage The amount of caustic damage the enemy's attacks deal. <code>Integer</code> Frost_Damage The amount of frost damage the enemy's attacks deal. <code>Integer</code> Arcane_Damage The amount of arcane damage the enemy's attacks deal. <code>Integer</code> Unholy_Damage The amount of unholy damage the enemy's attacks deal. <code>Integer</code> Sacred_Damage The amount of sacred damage the enemy's attacks deal. <code>Integer</code> Psionic_Damage The amount of psionic damage the enemy's attacks deal. <code>Integer</code> Physical_Resistance The % of reduction for all the Physical Damage the enemy receives. (Slashing, Piercing, Crushing, Rending). <code>Integer</code> Natural_Resistance The % of reduction for all the Nature Damage the enemy receives. (Fire, Frost, Shock, Poison, Caustic). <code>Integer</code> Slashing_Resistance The % of reduction for all the Slashing Damage the enemy receives. <code>Integer</code> Piercing_Resistance The % of reduction for all the Piercing Damage the enemy receives. <code>Integer</code> Blunt_Resistance The % of reduction for all the Blunt Damage the enemy receives. <code>Integer</code> Rending_Resistance The % of reduction for all the Rending Damage the enemy receives. <code>Integer</code> Fire_Resistance The % of reduction for all the Fire Damage the enemy receives. <code>Integer</code> Shock_Resistance The % of reduction for all the Shock Damage the enemy receives. <code>Integer</code> Poison_Resistance The % of reduction for all the Poison Damage the enemy receives. <code>Integer</code> Caustic_Resistance The % of reduction for all the Caustic Damage the enemy receives. <code>Integer</code> Frost_Resistance The % of reduction for all the Frost Damage the enemy receives. <code>Integer</code> Arcane_Resistance The % of reduction for all the Arcane Damage the enemy receives. <code>Integer</code> Unholy_Resistance The % of reduction for all the Unholy Damage the enemy receives. <code>Integer</code> Sacred_Resistance The % of reduction for all the Sacred Damage the enemy receives. <code>Integer</code> Psionic_Resistance The % of reduction for all the Psionic Damage the enemy receives. <code>Integer</code> canBlock Whether or not the enemy can block attacks. (1 for true, empty for false) <code>Integer</code> canDisarm Whether or not the enemy can be disarmed. (1 for true, empty for false) <code>Integer</code> canSwim Whether or not the enemy can swim. (1 for true, empty for false) <code>Integer</code> Swimming_Cost The amount of MP this enemy uses for every tile travelled when swimming."},{"location":"references/tables/#gml_globalscript_table_skills_stat","title":"gml_GlobalScript_table_skills_stat","text":"<p> 0.8.1.9</p> <p>Content : This table contains various stats about the skills in Stoneshard, like their cooldowns, buffs/debuffs durations, range, targetting method and more.</p> <p>Table Format :  </p> Unnamed: 0 Object Target Range KD MP Reserv Duration AOE_Lenght AOE_Width is_movement Pattern Class Bonus_Range Starcast Branch is_knockback Crime metacategory FMB AP Attack Stance Charge Maneuver Spell Taking_Aim o_b_taking_aim No Target 0 1 4 0 1 0 0 0 normal skill 0 nan ranged 0 nan weapon 0 0 nan nan nan 1 nan <p>Attributes :</p> Type Name Description <code>String</code> The skill's ID. Not to be confused with the skill's in-game name. Note: Devs left this field unnamed for some reason... <code>String</code> Object The gameobject associated with this skill. <code>String</code> Target The targetting method for this skill.   Possible values : <code>No Target</code>, <code>Target Object</code>, <code>Target Point</code>, <code>Target Area</code>. <code>Integer</code> Range The range this skill can be used at.  Special values : <code>0</code> for no range, <code>range</code> to use the weapon's range, <code>vis</code> to use the vision attribute. <code>Integer</code> KD The cooldown for this skill in turns. <code>Integer</code> MP The amount of energy used to use this skill. <code>Integer</code> Reserv <code>Integer</code> Duration The amount of turns the buff/debuff inflicted by this skill will last. \u00a0  <code>Integer</code> AOE_Lenght The amount of tiles covered by the AOE of this skill on the X axis. <code>0</code> if none. <code>Integer</code> AOE_Width The amount of tiles covered by the AOE of this skill on the Y axis. <code>0</code> if none. <code>Integer</code> is_movement Whether or not this skill moves the object casting it. <code>String</code> Pattern The pattern for this skill.  Possible values : <code>normal</code>, <code>five</code>, <code>line</code>, <code>circle</code>, <code>`pyramid</code> <code>String</code> Class The class for this skill.  Possible values : <code>skill</code>, <code>spell</code>, <code>attack</code> <code>Integer</code> Bonus_Range The bonus range added when using this skill. \u00a0  <code>String</code> Starcast The sprite used when this skill is used.  Note : The sprite name seems to be followed by an underscore (_). \u00a0  <code>String</code> Branch The skill tree this skill belongs to. <code>none</code> if it belongs to none. <code>Integer</code> is_knockback Whether or not this skill causes knockback. <code>Integer</code> Crime Whether or not using this skill around friendly NPCs is considered a crime. \u00a0  <code>String</code> metacategory The metacategory this skill belongs to. Possible values : <code>weapon</code>. <code>Integer</code> FMB The chance for this skill to backfire. Special values : <code>0</code> for no backfire possible.  \u00a0  <code>Integer</code> AP <code>Integer</code> Attack Whether this skill is an attack or not. Spells don't seem to have this. \u00a0  <code>Integer</code> Stance Whether this skill is a stance or not. <code>Integer</code> Charge Whether this skill is a charge / a rush. <code>Integer</code> Maneuver Whether this skills is a maneuver. \u00a0  <code>Integer</code> Spell Whether this skill is a spell or not."},{"location":"references/useful-functions/","title":"Useful Functions","text":""},{"location":"references/useful-functions/#description","title":"Description","text":"<p>This here is an unsorted list of random functions you may or may not find useful during your modding journey. Functions that are built into Gamemaker Studio should be listed in their own section.</p> <p>This will eventually get sorted into something more useful/readable, but for now, this will do.</p> <p>Info</p> <p>Please test functions thoroughly and make sure you understand what they do before adding them to the documentation.</p>"},{"location":"references/useful-functions/#gml-functions","title":"GML Functions","text":""},{"location":"references/useful-functions/#is_undefined","title":"is_undefined()","text":"<p>Syntax : <code>is_undefined(variable)</code></p> <p>Returns true if the passed variable was never initialized to a value. Returns false otherwise. Not to mistake with <code>variable_instance_exists()</code> or <code>variable_global_exists()</code>.</p>"},{"location":"references/useful-functions/#variable_global_exists","title":"variable_global_exists()","text":"<p>Syntax : <code>variable_global_exists(\"global_var_name\")</code></p> <p>Returns true if a global variable with the named passed as a string exists. It doesn't need to be initialized. Returns false if it doesn't.</p>"},{"location":"references/useful-functions/#instance_destroy","title":"instance_destroy()","text":"<p>Syntax : <code>instance_destroy(gameobject)</code></p> <p>Deletes passed gameobject if passed.  Deletes the gameobject this was called from if no gameobject was passed.</p>"},{"location":"references/useful-functions/#event_user","title":"event_user()","text":"<p>Syntax : <code>event_user(event_number)</code></p> <p>Fires passed user event on the gameobject calling this. <code>event_number</code> should be between 0 and 15.</p>"},{"location":"references/useful-functions/#script_execute","title":"script_execute()","text":"<p>Syntax : <code>script_execute(scr, arg0, arg1, arg2..., etc...)</code></p> <p>Calls the passed script with given arguments.</p>"},{"location":"references/useful-functions/#show_message","title":"show_message()","text":"<p>Syntax : <code>show_message(\"message\")</code></p> <p>Creates a pop-up window with given message.</p>"},{"location":"references/useful-functions/#audio_play_sound","title":"audio_play_sound()","text":"<p>Syntax : <code>audio_play_sound(snd_index, priority, looping)</code></p> <p>Plays the passed sound index. Priority is an int, higher means higher priority. Looping is a boolean, if true the sound will loop.</p> <p>e.g. : <code>audio_play_sound(snd_PlayerDead, 10, false)</code></p>"},{"location":"references/useful-functions/#place_meeting","title":"place_meeting()","text":"<p>Syntax : <code>place_meeting(x, y, obj)</code></p> <p>Checks for a collision by moving the instance, moves back and tell you if a collision with obj was found or not.</p> <p></p>"},{"location":"references/useful-functions/#stoneshard-functions","title":"Stoneshard Functions","text":""},{"location":"references/useful-functions/#scr_actionslogupdate","title":"scr_actionsLogUpdate()","text":"<p>Syntax : <code>scr_actionsLogUpdate(\"message\")</code></p> <p>Prints message in the action log at the bottom left of the screen. Useful for debugging.</p>"},{"location":"references/useful-functions/#scr_id_get_name","title":"scr_id_get_name()","text":"<p>Syntax : <code>scr_id_get_name(id)</code></p> <p>Returns name for given ID. e.g. <code>scr_id_get_name(3126)</code> --&gt; <code>\"o_player\"</code></p>"},{"location":"references/useful-functions/#script_execute_1","title":"script_execute()","text":"<p>Syntax : <code>script_execute(scriptName, _argumentsArray)</code></p> <p>Executes script with array of arguments.</p>"},{"location":"references/useful-functions/#scr_inventory_add_item","title":"scr_inventory_add_item()","text":"<p>Syntax :</p> <pre><code>with(o_inventory)\n    scr_inventory_add_item(item_name_or_id)\n</code></pre> <p>Adds item by id or by name to player's inventory.</p>"},{"location":"references/useful-functions/#scr_smoothsaveauto","title":"scr_smoothSaveAuto()","text":"<p>Syntax : <code>scr_smoothSaveAuto()</code></p> <p>Uses the built-in autosave feature to save the game.</p>"},{"location":"tools/deltapatcher/","title":"DeltaPatcher","text":""},{"location":"tools/deltapatcher/#description","title":"Description","text":"<p>DeltaPatcher is the 2nd most used tool for Stoneshard modding. Currently, it's the way we both distribute and have users install mods.</p> <p>It works by checking the differences between 2 files, and generating a .xdelta file which contains only the difference (or delta ) between the 2 files. This is important because this allows us to share our mods without sending the entire game files, as that would imply much bigger file sizes as well as technically being piracy.</p> <p>The other use of DeltaPatcher as mentionned above is to actually install the mods for users. All they have to do is install DeltaPatcher, download your .xdelta file and apply it on their data.win.</p> Limitations <p>Obviously this method has limitations. Since in the end we are essentially replacing the user's data.win with our own, this means the following :</p> <ul> <li>Mods only work for 1 specific version : the one they were made on. Any update, regardless of how insignificant will break mod compatibility because of how this works.</li> <li>It's impossible to install multiple mods at once, unless they have been manually merged in the data.win.</li> </ul> <p>Though this is no fault of DeltaPatcher, we are currently looking for better options. Let us know if you know of any on the Stoneshard Mod Hub .</p>"},{"location":"tools/deltapatcher/#download","title":"Download","text":"<p>You can grab DeltaPatcher directly on Github. Make sure to grab the version for your OS and not the Source Code !</p> <p>DeltaPatcher on Github </p>"},{"location":"tools/deltapatcher/#usage","title":"Usage","text":""},{"location":"tools/deltapatcher/#creating-mods","title":"Creating Mods","text":"Creating .xdelta files <ul> <li>Make sure you have both a vanilla data.win, and a modded data.win, and that they're both from the same game version.</li> <li>Open <code>DeltaPatcher.exe</code>.</li> <li>Click on the blue button with 2 arrows at the bottom of the window.</li> <li>You should now have 2 more fields.</li> <li>In the <code>Original file</code> field, browse to your vanilla data.win.</li> <li>In the <code>Modified file</code> field, browse to your modified data.win.</li> <li>in the <code>XDelta patch</code> field, browse to the place where you want to save the .xdelta file.</li> <li>You can enter a description in the <code>Description (optional)</code> field if you wish.</li> <li>When done, click on the <code>Create patch</code> button.</li> <li>Wait for it to be done, it can take a bit of time.</li> <li>When done you should have a .xdelta file in the folder you specified.</li> <li>You can distribute this to anyone, this .xdelta file is your mod.</li> </ul>"},{"location":"tools/deltapatcher/#installing-mods","title":"Installing Mods","text":"Applying .xdelta files <ul> <li>Make sure your data.win and the .xdelta of the mod you downloaded are for the same game version.</li> <li>Open <code>DeltaPatcher.exe</code>.</li> <li>In the <code>Original file</code> field, browse to your vanilla data.win.</li> <li>In the <code>XDelta patch</code> field, browse to the .xdelta mod you want to apply to your game.</li> <li>Click on the <code>Apply patch</code> button.</li> <li>Wait for it to be done, it can take a bit of time.</li> <li>When done, your game is now modded.</li> </ul>"},{"location":"tools/deltapatcher/#relevant-guides","title":"Relevant Guides","text":"<p>WIP</p> <p>Come back later !</p>"},{"location":"tools/deltapatcher/#screenshots","title":"Screenshots","text":"<p>WIP</p> <p>Come back later !</p>"},{"location":"tools/dialogue-editor/","title":"Dialogue Editor 2","text":""},{"location":"tools/dialogue-editor/#description","title":"Description","text":"<p>An essential part of any dialogue is its structure : which line is shown and what choices it leads to.  </p> <p>In Stoneshard, though individual lines are stored in the data.win file, the overarching dialogue structure is not. Instead, these are stored in .de2 files located in the <code>dialogs</code> folder.</p> <p>These are made with the Dialogue Editor 2 extension for Gamemaker Studio 1.4. Thankfully, there is a program we can use to read, edit or create our own dialogues without needing to use Gamemaker Studio.</p>"},{"location":"tools/dialogue-editor/#download","title":"Download","text":"<p>You can grab the Dialogue Editor 2 extension (which includes the program) from the Stoneshard Mod Hub  or below.</p> <p>Dialogue Editor 2 </p>"},{"location":"tools/dialogue-editor/#usage","title":"Usage","text":"<p>From the download above, the only thing we really need is the <code>DE2.exe</code> file. It's located in <code>Assets &gt; datafiles</code>.</p> <p>Simply run the program. You'll now be able to create or edit any of the <code>.de2</code> dialogue files located in the <code>dialogs</code> folder in your game installation directory.</p>"},{"location":"tools/dialogue-editor/#controls","title":"Controls","text":"Key Description Middle Button Move around the canvas. Right Button Create a new topic. Left Button Select topic(s). Ctrl+S Save dialogue. Del Delete selected topic."},{"location":"tools/dialogue-editor/#relevant-guides","title":"Relevant Guides","text":"<ul> <li>Adding Basic Dialogues</li> </ul>"},{"location":"tools/dialogue-editor/#screenshots","title":"Screenshots","text":""},{"location":"tools/gmltocsv/","title":"GML to CSV Converter","text":""},{"location":"tools/gmltocsv/#description","title":"Description","text":"<p>In Stoneshard, some data is stored in tables. The best way to describe what those are is a spreadsheet. Unfortunately, you can't import GML tables into Excel or Google Docs as they are.</p> <p>This tool fixes this by converting them to the .csv format, which is commonly used for spreadsheets, and as such lets you import them in most software to both read and edit tables.</p>"},{"location":"tools/gmltocsv/#download","title":"Download","text":"<p>You can grab the GML to CSV Converter from the Stoneshard Mod Hub  or below.</p> <p>Make sure you have installed the .Net Core 3.1 as this is a requirement for the GML to CSV Converter to work.  </p> <p>Warning</p> <p>There is a known issue with .Net Core 3.1 where the required library hostfxr.dll could not be found. If you run into that issue, check if you installed the correct version (usually the x64 one).</p> <p></p> <p>.Net Core 3.1  GML To CSV Converter </p>"},{"location":"tools/gmltocsv/#usage","title":"Usage","text":""},{"location":"tools/gmltocsv/#1-extracting-the-table","title":"1. Extracting the table","text":"Extracting the table <ul> <li>Open UMT.</li> <li>Locate the file containing the table you want to convert into .csv and note down its name. (exemple : <code>gml_GlobalScript_table_all_attribute</code>)</li> <li>Click on <code>Scripts</code>, <code>Resource Unpackers</code> and finally <code>DumpSpecificCode.csx</code>.</li> <li>Select the folder where the file containing your table will be extracted.</li> <li>Enter the name of the file you want to extract.</li> <li>A <code>Code</code> folder should have appeared where you extracted the file, and it should contain a <code>.gml</code> file.</li> </ul>"},{"location":"tools/gmltocsv/#2-converting-the-table","title":"2. Converting the table","text":"Converting to .csv <ul> <li>Move the .gml file in the <code>CSV_GML_Converter</code> folder you installed earlier.</li> <li>Your .gml file should be in the same folder as the <code>PUT_CSV_OR_GML_FILES_HERE</code> file.</li> <li>Run the <code>CSV_GML_converter_and_editor.exe</code> file.</li> <li>Read the instructions on screen, and press the key corresponding to the file you're trying to convert.</li> <li>The converter will create the .csv file in the same folder.</li> <li>Once it prompts you to chose a file again, you can close it.</li> </ul> <p>Tip</p> <p>To avoid bloating this folder I strongly recommend moving both the .gml and .csv files out of the folder when you're done with converting them.</p>"},{"location":"tools/gmltocsv/#relevant-guides","title":"Relevant Guides","text":"<p>WIP</p> <p>Come back later !</p>"},{"location":"tools/gmltocsv/#screenshots","title":"Screenshots","text":"<p>WIP</p> <p>Come back later !</p>"},{"location":"tools/hgpatcher/","title":"HGPatcher","text":""},{"location":"tools/hgpatcher/#description","title":"Description","text":"<p>HGPatcher isn't a standalone tool : It's actually 2 scripts you can run in UMT.</p> <p>HGExport.csx finds the differences between a vanilla data.win and a modified one, and extracts only the modified code. In practice however, I found it struggled to do so, and often produced random files, sometimes missing some of the modifications I made.</p> <p>HGPatcher.csx attempts to patch the changes from a data.win onto another data.win. The main issue with this is that when patching mods which add content, you will have issues with asset IDs.</p> <p>You can check out the guide <code>Cuistre#5656</code> made about HGPatcher here.</p>"},{"location":"tools/hgpatcher/#download","title":"Download","text":"<p>You can grab the latest version of HGPatcher from the Stoneshard Mod Hub Discord  or below.</p> <p>HGPatcher </p>"},{"location":"tools/hgpatcher/#usage","title":"Usage","text":"<p>Using HGPatcher's scripts is pretty straightforward :</p> <ul> <li>Open UMT.</li> <li>Click on <code>Scripts</code>, top left of the window.</li> <li>Click on <code>Run Other Scripts...</code>.</li> <li>Browse to either <code>HGExport.csx</code> or <code>HGPatcher.csx</code>.</li> <li>Follow the prompts on screen.</li> </ul>"},{"location":"tools/hgpatcher/#relevant-guides","title":"Relevant Guides","text":"<p>WIP</p> <p>Come back later !</p>"},{"location":"tools/hgpatcher/#screenshots","title":"Screenshots","text":"<p>WIP</p> <p>Come back later !</p>"},{"location":"tools/undertalemodtool/","title":"UndertaleModTool","text":""},{"location":"tools/undertalemodtool/#description","title":"Description","text":"<p>UndertaleModTool, often abreviated UMT, is the main tool you will be using to create mods.</p> <p>As the name implies it was initially made for Undertale, but works well with Stoneshard since both of them were made with the same game engine, Gamemaker Studio.</p> <p>We use UndertaleModTool to open and edit the data.win file, which contains all of the game's data.</p>"},{"location":"tools/undertalemodtool/#download","title":"Download","text":"<p>You can find the latest version of UMT over on Github.</p> <p>It's recommended to grab the latest Bleeding Edge release for your operating system, as development is fairly active and developers are fixing issues often.</p> <p>UndertaleModTool Github </p>"},{"location":"tools/undertalemodtool/#usage","title":"Usage","text":"<p>Locate your data.win file, which should be in your game installation directory. By default :</p> <ul> <li>Steam : <code>C:\\SteamLibrary\\steamapps\\common\\Stoneshard</code></li> <li>GOG : <code>C:\\Games\\Stoneshard</code></li> </ul> <p>Once found, simply double click on it to open it with UndertaleModTool.</p>"},{"location":"tools/undertalemodtool/#relevant-guides-references","title":"Relevant Guides &amp; References","text":"<p>WIP</p> <p>Come back later !</p>"},{"location":"tools/undertalemodtool/#screenshots","title":"Screenshots","text":"<p>WIP</p> <p>Come back later !</p>"}]}